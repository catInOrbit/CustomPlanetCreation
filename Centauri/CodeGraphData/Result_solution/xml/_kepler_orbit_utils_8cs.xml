<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_kepler_orbit_utils_8cs" kind="file">
    <compoundname>KeplerOrbitUtils.cs</compoundname>
    <innerclass refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils" prot="public">SimpleKeplerOrbits::KeplerOrbitUtils</innerclass>
    <innernamespace refid="namespace_simple_kepler_orbits">SimpleKeplerOrbits</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#region<sp/>Copyright</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endregion</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">SimpleKeplerOrbits</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils" kindref="compound">KeplerOrbitUtils</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a296b4482aa3db1038fb0dc1698a2bc9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a296b4482aa3db1038fb0dc1698a2bc9c" kindref="member">PI_2</ref><sp/>=<sp/>6.2831853071796d;</highlight></codeline>
<codeline lineno="23" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1aaaa91101232c43a764cd4e252d924381" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1aaaa91101232c43a764cd4e252d924381" kindref="member">Deg2Rad</ref><sp/>=<sp/>0.017453292519943d;</highlight></codeline>
<codeline lineno="24" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a5227260f08aa8f193d4c443bd5b5cd01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a5227260f08aa8f193d4c443bd5b5cd01" kindref="member">Rad2Deg</ref><sp/>=<sp/>57.295779513082d;</highlight></codeline>
<codeline lineno="25" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1ac0169cdf0378a83c45fb9c8de29cb009" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1ac0169cdf0378a83c45fb9c8de29cb009" kindref="member">Epsilon</ref><sp/>=<sp/>1.401298E-45d;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1aace2f0cd22db4165eef2b1895018af31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1aace2f0cd22db4165eef2b1895018af31" kindref="member">Acosh</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.Log(x<sp/>+<sp/>System.Math.Sqrt(x<sp/>*<sp/>x<sp/>-<sp/>1.0));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a51c0621b6496d8a069b0fd4121c50e7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a51c0621b6496d8a069b0fd4121c50e7c" kindref="member">GetRayPlaneIntersectionPoint</ref>(Vector3<sp/>pointOnPlane,<sp/>Vector3<sp/>normal,<sp/>Vector3<sp/>rayOrigin,<sp/>Vector3<sp/>rayDirection)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>dotProd<sp/>=<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1afa8be8fe239070d1f508db00054c840f" kindref="member">DotProduct</ref>(rayDirection,<sp/>normal);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Math.Abs(dotProd)<sp/>&lt;<sp/>1e-5)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>p<sp/>=<sp/>rayOrigin<sp/>+<sp/>rayDirection<sp/>*<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1afa8be8fe239070d1f508db00054c840f" kindref="member">DotProduct</ref>((pointOnPlane<sp/>-<sp/>rayOrigin),<sp/>normal)<sp/>/<sp/>dotProd;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Projection.<sp/>for<sp/>better<sp/>precision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>p<sp/>-<sp/>normal<sp/>*<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1afa8be8fe239070d1f508db00054c840f" kindref="member">DotProduct</ref>(p<sp/>-<sp/>pointOnPlane,<sp/>normal);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1ac04a1060397dff978457fb8f0e6e1d9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1ac04a1060397dff978457fb8f0e6e1d9a" kindref="member">RotateVectorByAngle</ref>(Vector3<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angleRad,<sp/>Vector3<sp/>n)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosT<sp/>=<sp/>Mathf.Cos(angleRad);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinT<sp/>=<sp/>Mathf.Sin(angleRad);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oneMinusCos<sp/>=<sp/>1f<sp/>-<sp/>cosT;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rotation<sp/>matrix:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a11<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.x<sp/>*<sp/>n.x<sp/>+<sp/>cosT;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a12<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.x<sp/>*<sp/>n.y<sp/>-<sp/>n.z<sp/>*<sp/>sinT;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a13<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.x<sp/>*<sp/>n.z<sp/>+<sp/>n.y<sp/>*<sp/>sinT;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a21<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.x<sp/>*<sp/>n.y<sp/>+<sp/>n.z<sp/>*<sp/>sinT;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a22<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.y<sp/>*<sp/>n.y<sp/>+<sp/>cosT;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a23<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.y<sp/>*<sp/>n.z<sp/>-<sp/>n.x<sp/>*<sp/>sinT;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a31<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.x<sp/>*<sp/>n.z<sp/>-<sp/>n.y<sp/>*<sp/>sinT;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a32<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.y<sp/>*<sp/>n.z<sp/>+<sp/>n.x<sp/>*<sp/>sinT;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a33<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.z<sp/>*<sp/>n.z<sp/>+<sp/>cosT;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.x<sp/>*<sp/>a11<sp/>+<sp/>v.y<sp/>*<sp/>a12<sp/>+<sp/>v.z<sp/>*<sp/>a13,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.x<sp/>*<sp/>a21<sp/>+<sp/>v.y<sp/>*<sp/>a22<sp/>+<sp/>v.z<sp/>*<sp/>a23,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.x<sp/>*<sp/>a31<sp/>+<sp/>v.y<sp/>*<sp/>a32<sp/>+<sp/>v.z<sp/>*<sp/>a33</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1ab51972afbbdb98bb2903107cd1997ef9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1ab51972afbbdb98bb2903107cd1997ef9" kindref="member">RotateVectorByAngle</ref>(<ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/>v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angleRad,<sp/><ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/>n)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cosT<sp/>=<sp/>Math.Cos(angleRad);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sinT<sp/>=<sp/>Math.Sin(angleRad);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oneMinusCos<sp/>=<sp/>1f<sp/>-<sp/>cosT;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rotation<sp/>matrix:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a11<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.x<sp/>*<sp/>n.x<sp/>+<sp/>cosT;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a12<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.x<sp/>*<sp/>n.y<sp/>-<sp/>n.z<sp/>*<sp/>sinT;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a13<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.x<sp/>*<sp/>n.z<sp/>+<sp/>n.y<sp/>*<sp/>sinT;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a21<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.x<sp/>*<sp/>n.y<sp/>+<sp/>n.z<sp/>*<sp/>sinT;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a22<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.y<sp/>*<sp/>n.y<sp/>+<sp/>cosT;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a23<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.y<sp/>*<sp/>n.z<sp/>-<sp/>n.x<sp/>*<sp/>sinT;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a31<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.x<sp/>*<sp/>n.z<sp/>-<sp/>n.y<sp/>*<sp/>sinT;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a32<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.y<sp/>*<sp/>n.z<sp/>+<sp/>n.x<sp/>*<sp/>sinT;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a33<sp/>=<sp/>oneMinusCos<sp/>*<sp/>n.z<sp/>*<sp/>n.z<sp/>+<sp/>cosT;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref>(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="struct_unity_engine_1_1_vector3d_1ab84cc8ded7be8d479f6c04351e604e44" kindref="member">x</ref><sp/>*<sp/>a11<sp/>+<sp/>v.<ref refid="struct_unity_engine_1_1_vector3d_1a03113ffc1771dfcd797c8a626149e1f1" kindref="member">y</ref><sp/>*<sp/>a12<sp/>+<sp/>v.<ref refid="struct_unity_engine_1_1_vector3d_1a328bdd25dcce27f7cd38660ace18f3c3" kindref="member">z</ref><sp/>*<sp/>a13,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="struct_unity_engine_1_1_vector3d_1ab84cc8ded7be8d479f6c04351e604e44" kindref="member">x</ref><sp/>*<sp/>a21<sp/>+<sp/>v.<ref refid="struct_unity_engine_1_1_vector3d_1a03113ffc1771dfcd797c8a626149e1f1" kindref="member">y</ref><sp/>*<sp/>a22<sp/>+<sp/>v.<ref refid="struct_unity_engine_1_1_vector3d_1a328bdd25dcce27f7cd38660ace18f3c3" kindref="member">z</ref><sp/>*<sp/>a23,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="struct_unity_engine_1_1_vector3d_1ab84cc8ded7be8d479f6c04351e604e44" kindref="member">x</ref><sp/>*<sp/>a31<sp/>+<sp/>v.<ref refid="struct_unity_engine_1_1_vector3d_1a03113ffc1771dfcd797c8a626149e1f1" kindref="member">y</ref><sp/>*<sp/>a32<sp/>+<sp/>v.<ref refid="struct_unity_engine_1_1_vector3d_1a328bdd25dcce27f7cd38660ace18f3c3" kindref="member">z</ref><sp/>*<sp/>a33</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1afa8be8fe239070d1f508db00054c840f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1afa8be8fe239070d1f508db00054c840f" kindref="member">DotProduct</ref>(Vector3<sp/>a,<sp/>Vector3<sp/>b)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.x<sp/>*<sp/>b.x<sp/>+<sp/>a.y<sp/>*<sp/>b.y<sp/>+<sp/>a.z<sp/>*<sp/>b.z;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a8e0ce0b15c451f9ef76d11f881f3cf6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a8e0ce0b15c451f9ef76d11f881f3cf6f" kindref="member">DotProduct</ref>(<ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/>a,<sp/><ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/>b)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.x<sp/>*<sp/>b.x<sp/>+<sp/>a.y<sp/>*<sp/>b.y<sp/>+<sp/>a.z<sp/>*<sp/>b.z;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a842d46e2323cc1a16b8305e2c7a48123" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a842d46e2323cc1a16b8305e2c7a48123" kindref="member">CrossProduct</ref>(Vector3<sp/>a,<sp/>Vector3<sp/>b)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(a.y<sp/>*<sp/>b.z<sp/>-<sp/>a.z<sp/>*<sp/>b.y,<sp/>a.z<sp/>*<sp/>b.x<sp/>-<sp/>a.x<sp/>*<sp/>b.z,<sp/>a.x<sp/>*<sp/>b.y<sp/>-<sp/>a.y<sp/>*<sp/>b.x);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a43dcd5c1f652ee62930c16e56547e35a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a43dcd5c1f652ee62930c16e56547e35a" kindref="member">CrossProduct</ref>(<ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/>a,<sp/><ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/>b)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref>(a.<ref refid="struct_unity_engine_1_1_vector3d_1a03113ffc1771dfcd797c8a626149e1f1" kindref="member">y</ref><sp/>*<sp/>b.<ref refid="struct_unity_engine_1_1_vector3d_1a328bdd25dcce27f7cd38660ace18f3c3" kindref="member">z</ref><sp/>-<sp/>a.<ref refid="struct_unity_engine_1_1_vector3d_1a328bdd25dcce27f7cd38660ace18f3c3" kindref="member">z</ref><sp/>*<sp/>b.<ref refid="struct_unity_engine_1_1_vector3d_1a03113ffc1771dfcd797c8a626149e1f1" kindref="member">y</ref>,<sp/>a.<ref refid="struct_unity_engine_1_1_vector3d_1a328bdd25dcce27f7cd38660ace18f3c3" kindref="member">z</ref><sp/>*<sp/>b.<ref refid="struct_unity_engine_1_1_vector3d_1ab84cc8ded7be8d479f6c04351e604e44" kindref="member">x</ref><sp/>-<sp/>a.<ref refid="struct_unity_engine_1_1_vector3d_1ab84cc8ded7be8d479f6c04351e604e44" kindref="member">x</ref><sp/>*<sp/>b.<ref refid="struct_unity_engine_1_1_vector3d_1a328bdd25dcce27f7cd38660ace18f3c3" kindref="member">z</ref>,<sp/>a.<ref refid="struct_unity_engine_1_1_vector3d_1ab84cc8ded7be8d479f6c04351e604e44" kindref="member">x</ref><sp/>*<sp/>b.<ref refid="struct_unity_engine_1_1_vector3d_1a03113ffc1771dfcd797c8a626149e1f1" kindref="member">y</ref><sp/>-<sp/>a.<ref refid="struct_unity_engine_1_1_vector3d_1a03113ffc1771dfcd797c8a626149e1f1" kindref="member">y</ref><sp/>*<sp/>b.<ref refid="struct_unity_engine_1_1_vector3d_1ab84cc8ded7be8d479f6c04351e604e44" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1accd6d913d4e91b13ce7a762ca5d5e423" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1accd6d913d4e91b13ce7a762ca5d5e423" kindref="member">CalcCircleOrbitVelocity</ref>(Vector3<sp/>attractorPos,<sp/>Vector3<sp/>bodyPos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>attractorMass,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bodyMass,<sp/>Vector3<sp/>orbitNormal,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gConst)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>distanceVector<sp/>=<sp/>bodyPos<sp/>-<sp/>attractorPos;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>dist<sp/>=<sp/>distanceVector.magnitude;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>MG<sp/>=<sp/>attractorMass<sp/>*<sp/>gConst;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>vScalar<sp/>=<sp/>System.Math.Sqrt(MG<sp/>/<sp/>dist);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a842d46e2323cc1a16b8305e2c7a48123" kindref="member">CrossProduct</ref>(distanceVector,<sp/>-orbitNormal).normalized<sp/>*<sp/>(float)vScalar;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1accfe1af556245e04f40d81aad19dabeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1accfe1af556245e04f40d81aad19dabeb" kindref="member">CalcCircleOrbitVelocity</ref>(<ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/>attractorPos,<sp/><ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/>bodyPos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>attractorMass,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bodyMass,<sp/><ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/>orbitNormal,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gConst)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>distanceVector<sp/>=<sp/>bodyPos<sp/>-<sp/>attractorPos;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>dist<sp/>=<sp/>distanceVector.magnitude;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>MG<sp/>=<sp/>attractorMass<sp/>*<sp/>gConst;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>vScalar<sp/>=<sp/>System.Math.Sqrt(MG<sp/>/<sp/>dist);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a842d46e2323cc1a16b8305e2c7a48123" kindref="member">CrossProduct</ref>(distanceVector,<sp/>-orbitNormal).normalized<sp/>*<sp/>vScalar;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1aef546a0bd604f5a64d067aa75dcb9a33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vector3[]<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1aef546a0bd604f5a64d067aa75dcb9a33" kindref="member">CalcOrbitPoints</ref>(Vector3<sp/>attractorPos,<sp/>Vector3<sp/>bodyPos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>attractorMass,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bodyMass,<sp/>Vector3<sp/>relVelocity,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gConst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointsCount)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointsCount<sp/>&lt;<sp/>3<sp/>||<sp/>pointsCount<sp/>&gt;<sp/>10000)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3[0];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>focusPoint<sp/>=<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a87c8f20623e46dc9c49dd430ef7e2eb9" kindref="member">CalcCenterOfMass</ref>(attractorPos,<sp/>attractorMass,<sp/>bodyPos,<sp/>bodyMass);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>radiusVector<sp/>=<sp/>bodyPos<sp/>-<sp/>focusPoint;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>radiusVectorMagnitude<sp/>=<sp/>radiusVector.magnitude;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>orbitNormal<sp/>=<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a842d46e2323cc1a16b8305e2c7a48123" kindref="member">CrossProduct</ref>(radiusVector,<sp/>relVelocity);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>MG<sp/>=<sp/>(attractorMass<sp/>+<sp/>bodyMass)<sp/>*<sp/>gConst;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>eccVector<sp/>=<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a842d46e2323cc1a16b8305e2c7a48123" kindref="member">CrossProduct</ref>(relVelocity,<sp/>orbitNormal)<sp/>/<sp/>(float)MG<sp/>-<sp/>radiusVector<sp/>/<sp/>radiusVectorMagnitude;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>focalParameter<sp/>=<sp/>orbitNormal.sqrMagnitude<sp/>/<sp/>MG;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>eccentricity<sp/>=<sp/>eccVector.magnitude;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>minorAxisNormal<sp/>=<sp/>-<ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a842d46e2323cc1a16b8305e2c7a48123" kindref="member">CrossProduct</ref>(orbitNormal,<sp/>eccVector).normalized;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>majorAxisNormal<sp/>=<sp/>-<ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a842d46e2323cc1a16b8305e2c7a48123" kindref="member">CrossProduct</ref>(orbitNormal,<sp/>minorAxisNormal).normalized;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbitNormal.Normalize();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>orbitCompressionRatio;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>semiMajorAxys;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>semiMinorAxys;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>relFocusPoint;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>centerPoint;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eccentricity<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbitCompressionRatio<sp/>=<sp/>1<sp/>-<sp/>eccentricity<sp/>*<sp/>eccentricity;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semiMajorAxys<sp/>=<sp/>focalParameter<sp/>/<sp/>orbitCompressionRatio;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semiMinorAxys<sp/>=<sp/>semiMajorAxys<sp/>*<sp/>System.Math.Sqrt(orbitCompressionRatio);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relFocusPoint<sp/>=<sp/>(float)semiMajorAxys<sp/>*<sp/>eccVector;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centerPoint<sp/>=<sp/>focusPoint<sp/>-<sp/>relFocusPoint;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbitCompressionRatio<sp/>=<sp/>eccentricity<sp/>*<sp/>eccentricity<sp/>-<sp/>1f;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semiMajorAxys<sp/>=<sp/>focalParameter<sp/>/<sp/>orbitCompressionRatio;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semiMinorAxys<sp/>=<sp/>semiMajorAxys<sp/>*<sp/>System.Math.Sqrt(orbitCompressionRatio);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relFocusPoint<sp/>=<sp/>-(float)semiMajorAxys<sp/>*<sp/>eccVector;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centerPoint<sp/>=<sp/>focusPoint<sp/>-<sp/>relFocusPoint;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>points<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3[pointsCount];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eccVar<sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pointsCount;<sp/>i++)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>result<sp/>=<sp/>eccentricity<sp/>&lt;<sp/>1<sp/>?</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(System.Math.Sin(eccVar)<sp/>*<sp/>semiMinorAxys),<sp/>-(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(System.Math.Cos(eccVar)<sp/>*<sp/>semiMajorAxys))<sp/>:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(System.Math.Sinh(eccVar)<sp/>*<sp/>semiMinorAxys),<sp/>(float)(System.Math.Cosh(eccVar)<sp/>*<sp/>semiMajorAxys));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eccVar<sp/>+=<sp/>Mathf.PI<sp/>*<sp/>2f<sp/>/<sp/>(float)(pointsCount<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[i]<sp/>=<sp/>minorAxisNormal<sp/>*<sp/>result.x<sp/>+<sp/>majorAxisNormal<sp/>*<sp/>result.y<sp/>+<sp/>centerPoint;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>points;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a87c8f20623e46dc9c49dd430ef7e2eb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a87c8f20623e46dc9c49dd430ef7e2eb9" kindref="member">CalcCenterOfMass</ref>(Vector3<sp/>pos1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass1,<sp/>Vector3<sp/>pos2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass2)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((pos1<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)mass1)<sp/>+<sp/>(pos2<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)mass2))<sp/>/<sp/>(float)(mass1<sp/>+<sp/>mass2);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a0754b03cc7dc247ccde45df2f4dc714d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a0754b03cc7dc247ccde45df2f4dc714d" kindref="member">CalcCenterOfMass</ref>(<ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/>pos1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass1,<sp/><ref refid="struct_unity_engine_1_1_vector3d" kindref="compound">Vector3d</ref><sp/>pos2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass2)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((pos1<sp/>*<sp/>mass1)<sp/>+<sp/>(pos2<sp/>*<sp/>mass2))<sp/>/<sp/>(mass1<sp/>+<sp/>mass2);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1afc5aec0e29b02cb18320dbe774763f7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1afc5aec0e29b02cb18320dbe774763f7d" kindref="member">ConvertEccentricToTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eccentricAnomaly,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eccentricity)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eccentricity<sp/>&lt;<sp/>1d)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>cosE<sp/>=<sp/>System.Math.Cos(eccentricAnomaly);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>tAnom<sp/>=<sp/>System.Math.Acos((cosE<sp/>-<sp/>eccentricity)<sp/>/<sp/>(1d<sp/>-<sp/>eccentricity<sp/>*<sp/>cosE));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eccentricAnomaly<sp/>&gt;<sp/>Mathf.PI)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tAnom<sp/>=<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a296b4482aa3db1038fb0dc1698a2bc9c" kindref="member">PI_2</ref><sp/>-<sp/>tAnom;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tAnom;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>tAnom<sp/>=<sp/>System.Math.Atan2(</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.Math.Sqrt(eccentricity<sp/>*<sp/>eccentricity<sp/>-<sp/>1d)<sp/>*<sp/>System.Math.Sinh(eccentricAnomaly),</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eccentricity<sp/>-<sp/>System.Math.Cosh(eccentricAnomaly)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tAnom;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1afdace01b04f45de666bb54ac04a2bcc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1afdace01b04f45de666bb54ac04a2bcc5" kindref="member">ConvertTrueToEccentricAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trueAnomaly,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eccentricity)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(eccentricity)<sp/>||<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(eccentricity))</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trueAnomaly;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trueAnomaly<sp/>=<sp/>trueAnomaly<sp/>%<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a296b4482aa3db1038fb0dc1698a2bc9c" kindref="member">PI_2</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eccentricity<sp/>&lt;<sp/>1d)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trueAnomaly<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trueAnomaly<sp/>=<sp/>trueAnomaly<sp/>+<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a296b4482aa3db1038fb0dc1698a2bc9c" kindref="member">PI_2</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>cosT2<sp/>=<sp/>Math.Cos(trueAnomaly);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>eccAnom<sp/>=<sp/>Math.Acos((eccentricity<sp/>+<sp/>cosT2)<sp/>/<sp/>(1d<sp/>+<sp/>eccentricity<sp/>*<sp/>cosT2));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trueAnomaly<sp/>&gt;<sp/>Math.PI)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eccAnom<sp/>=<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a296b4482aa3db1038fb0dc1698a2bc9c" kindref="member">PI_2</ref><sp/>-<sp/>eccAnom;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eccAnom;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>cosT<sp/>=<sp/>Math.Cos(trueAnomaly);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(trueAnomaly))</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;Ec<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>eccentricity);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>eccAnom<sp/>=<sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1aace2f0cd22db4165eef2b1895018af31" kindref="member">Acosh</ref>((eccentricity<sp/>+<sp/>cosT)<sp/>/<sp/>(1d<sp/>+<sp/>eccentricity<sp/>*<sp/>cosT))<sp/>*<sp/>System.Math.Sign(trueAnomaly);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eccAnom;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1af3d28c527844e613bae1bdf85500cb7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1af3d28c527844e613bae1bdf85500cb7a" kindref="member">ConvertMeanToEccentricAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>meanAnomaly,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eccentricity)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eccentricity<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a180ffb5c492879d67c26855927ecd3c6" kindref="member">KeplerSolver</ref>(meanAnomaly,<sp/>eccentricity);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a4c1f546c3d5821b47689348798ac1ac2" kindref="member">KeplerSolverHyperbolicCase</ref>(meanAnomaly,<sp/>eccentricity);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a4cd46dad2a64957cd78cb8fc8b5a11eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a4cd46dad2a64957cd78cb8fc8b5a11eb" kindref="member">ConvertEccentricToMeanAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eccentricAnomaly,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eccentricity)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eccentricity<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eccentricAnomaly<sp/>-<sp/>eccentricity<sp/>*<sp/>System.Math.Sin(eccentricAnomaly);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>System.Math.Sinh(eccentricAnomaly)<sp/>*<sp/>eccentricity<sp/>-<sp/>eccentricAnomaly;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a82edc70d78c23830fc6847d843815f84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a82edc70d78c23830fc6847d843815f84" kindref="member">CalcTrueAnomalyForDistance</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eccentricity,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>semiMajorAxis)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eccentricity<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.Acos((semiMajorAxis<sp/>*<sp/>(1d<sp/>-<sp/>eccentricity<sp/>*<sp/>eccentricity)<sp/>-<sp/>distance)<sp/>/<sp/>(distance<sp/>*<sp/>eccentricity));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.Acos((semiMajorAxis<sp/>*<sp/>(eccentricity<sp/>*<sp/>eccentricity<sp/>-<sp/>1d)<sp/>-<sp/>distance)<sp/>/<sp/>(distance<sp/>*<sp/>eccentricity));</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a180ffb5c492879d67c26855927ecd3c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a180ffb5c492879d67c26855927ecd3c6" kindref="member">KeplerSolver</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>meanAnomaly,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eccentricity)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//one<sp/>stable<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations<sp/>=<sp/>eccentricity<sp/>&lt;<sp/>0.4d<sp/>?<sp/>2<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E<sp/>=<sp/>meanAnomaly;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>iterations;<sp/>i++)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>esinE<sp/>=<sp/>eccentricity<sp/>*<sp/>System.Math.Sin(E);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ecosE<sp/>=<sp/>eccentricity<sp/>*<sp/>System.Math.Cos(E);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaE<sp/>=<sp/>E<sp/>-<sp/>esinE<sp/>-<sp/>meanAnomaly;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>1.0<sp/>-<sp/>ecosE;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E<sp/>+=<sp/>-5d<sp/>*<sp/>deltaE<sp/>/<sp/>(n<sp/>+<sp/>System.Math.Sign(n)<sp/>*<sp/>System.Math.Sqrt(System.Math.Abs(16d<sp/>*<sp/>n<sp/>*<sp/>n<sp/>-<sp/>20d<sp/>*<sp/>deltaE<sp/>*<sp/>esinE)));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a4c1f546c3d5821b47689348798ac1ac2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_simple_kepler_orbits_1_1_kepler_orbit_utils_1a4c1f546c3d5821b47689348798ac1ac2" kindref="member">KeplerSolverHyperbolicCase</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>meanAnomaly,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eccentricity)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>1e-005d;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>1d;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>F<sp/>=<sp/>System.Math.Log(2d<sp/>*<sp/>System.Math.Abs(meanAnomaly)<sp/>/<sp/>eccentricity<sp/>+<sp/>1.8d);</highlight><highlight class="comment">//danby<sp/>guess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(F)<sp/>||<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(F))</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>meanAnomaly;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(System.Math.Abs(delta)<sp/>&gt;<sp/>epsilon)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>(eccentricity<sp/>*<sp/>(float)System.Math.Sinh(F)<sp/>-<sp/>F<sp/>-<sp/>meanAnomaly)<sp/>/<sp/>(eccentricity<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)System.Math.Cosh(F)<sp/>-<sp/>1d);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(delta)<sp/>||<sp/>double.IsInfinity(delta))</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/>-=<sp/>delta;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Uniprj/CentauriV2/Centauri/Assets/SimpleKeplerOrbits/Scripts/Utils/KeplerOrbitUtils.cs"/>
  </compounddef>
</doxygen>
