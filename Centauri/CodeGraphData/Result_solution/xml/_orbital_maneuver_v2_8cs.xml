<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_orbital_maneuver_v2_8cs" kind="file">
    <compoundname>OrbitalManeuverV2.cs</compoundname>
    <innerclass refid="class_orbital_maneuver_v2" prot="public">OrbitalManeuverV2</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine.UI;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="class_orbital_maneuver_v2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_orbital_maneuver_v2" kindref="compound">OrbitalManeuverV2</ref><sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>public<sp/>Text<sp/>debuggerConsole;<sp/>//TODO:<sp/><sp/>Delete<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_orbital_maneuver_v2_1abc4e5bb7ee8eeb9c2d5ab03aca5ee3d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>GameObject<sp/><ref refid="class_orbital_maneuver_v2_1abc4e5bb7ee8eeb9c2d5ab03aca5ee3d7" kindref="member">player</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;Speed<sp/>of<sp/>rotation&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="11" refid="class_orbital_maneuver_v2_1aa41c7768436538929eafa6b3a7569d94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_orbital_maneuver_v2_1aa41c7768436538929eafa6b3a7569d94" kindref="member">rotationalSpeed</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;Bounding<sp/>box<sp/>size&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="13" refid="class_orbital_maneuver_v2_1ad45164eb4c55f8c0005319cde6580832" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_orbital_maneuver_v2_1ad45164eb4c55f8c0005319cde6580832" kindref="member">boundingBoxFloatConst</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_orbital_maneuver_v2_1ae171dd0901c284cc397bf979b3502269" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>GameObject<sp/><ref refid="class_orbital_maneuver_v2_1ae171dd0901c284cc397bf979b3502269" kindref="member">boundingBoxGameobject</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_orbital_maneuver_v2_1a9e6edfcd686cff27c530e967f0d03aaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_orbital_maneuver_v2_1a9e6edfcd686cff27c530e967f0d03aaf" kindref="member">rotationalSpeedDampenent</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_orbital_maneuver_v2_1a728eed98ac6b429526ac6e24c7d4c21b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_orbital_maneuver_v2_1a728eed98ac6b429526ac6e24c7d4c21b" kindref="member">forwardForceDampenent</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_orbital_maneuver_v2_1af2151da54cbe434818f0671ebe455a69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbital_maneuver_v2_1af2151da54cbe434818f0671ebe455a69" kindref="member">isOutOfBound</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22" refid="class_orbital_maneuver_v2_1a264895b591ad9eb7c2aa584089f6912c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_input_detection_utils" kindref="compound">InputDetectionUtils</ref><sp/><ref refid="class_orbital_maneuver_v2_1a264895b591ad9eb7c2aa584089f6912c" kindref="member">inputDetectionUtils</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_input_detection_utils" kindref="compound">InputDetectionUtils</ref>();</highlight></codeline>
<codeline lineno="23" refid="class_orbital_maneuver_v2_1a27bc82a25f78430c2de6b789e080ae37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_screen_utils" kindref="compound">ScreenUtils</ref><sp/><ref refid="class_orbital_maneuver_v2_1a27bc82a25f78430c2de6b789e080ae37" kindref="member">screenUtils</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_screen_utils" kindref="compound">ScreenUtils</ref>(Screen.width,<sp/>Screen.height);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_orbital_maneuver_v2_1adaa34d6b1e9110e4aee904735e8f9ce1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_rotation_matrix_helper" kindref="compound">RotationMatrixHelper</ref><sp/><ref refid="class_orbital_maneuver_v2_1adaa34d6b1e9110e4aee904735e8f9ce1" kindref="member">rotationMatrixHelper</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_rotation_matrix_helper" kindref="compound">RotationMatrixHelper</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------Set<sp/>of<sp/>fields<sp/>designated<sp/>for<sp/>MoveVelVectorTowardsDesinatedPos()--------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_orbital_maneuver_v2_1a646c77cdab2e97a67315b5c47fe3ebeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[]<sp/><ref refid="class_orbital_maneuver_v2_1a646c77cdab2e97a67315b5c47fe3ebeb" kindref="member">points</ref>;</highlight></codeline>
<codeline lineno="30" refid="class_orbital_maneuver_v2_1aef139c99f01c042435e2155b6f192605" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_orbital_maneuver_v2_1aef139c99f01c042435e2155b6f192605" kindref="member">rotatedPoint</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------Set<sp/>of<sp/>fields<sp/>designated<sp/>for<sp/>MoveVelVectorTowardsDesinatedPos()--------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]<sp/></highlight><highlight class="comment">//For<sp/>showing<sp/>in<sp/>inspector<sp/>for<sp/>debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_orbital_maneuver_v2_1a71759d6c0518d6b07a0044120bbe7d53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_orbital_maneuver_v2_1a71759d6c0518d6b07a0044120bbe7d53" kindref="member">axisOfRotation</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_orbital_maneuver_v2_1a2516caba112fc6223006beb2033e4bce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbital_maneuver_v2_1a2516caba112fc6223006beb2033e4bce" kindref="member">Start</ref>()</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbital_maneuver_v2_1abc4e5bb7ee8eeb9c2d5ab03aca5ee3d7" kindref="member">player</ref><sp/>=<sp/>GameObject.FindGameObjectWithTag(</highlight><highlight class="stringliteral">&quot;Player&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_orbital_maneuver_v2_1ac88daf5c036796be7ee8d883980be11d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbital_maneuver_v2_1ac88daf5c036796be7ee8d883980be11d" kindref="member">Update</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SetAxisOfRotation();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbital_maneuver_v2_1a7592e7a48115f5e50ab9c50c6922341d" kindref="member">SetRotationalSpeed</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbital_maneuver_v2_1a63fcc8d6e09ee1b5f8b1eb1e108b4e66" kindref="member">SetRotationalMatrix</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbital_maneuver_v2_1a264895b591ad9eb7c2aa584089f6912c" kindref="member">inputDetectionUtils</ref>.<ref refid="class_input_detection_utils_1ab1ec30e20f1ec4e09d2666df9a70da72" kindref="member">ProcessTouchStateOnePoint</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Moving&quot;</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputDetectionUtils.ProcessTouchStateOnePoint()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Hodling&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbital_maneuver_v2_1a264895b591ad9eb7c2aa584089f6912c" kindref="member">inputDetectionUtils</ref>.<ref refid="class_input_detection_utils_1aaae05a221b434a6a4faf6b77601204fc" kindref="member">ScreenSideDetection</ref>(Screen.width)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Left&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbital_maneuver_v2_1a2f799e115219db02a70173b0279c31cd" kindref="member">EngineBurn</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbital_maneuver_v2_1a264895b591ad9eb7c2aa584089f6912c" kindref="member">inputDetectionUtils</ref>.<ref refid="class_input_detection_utils_1aaae05a221b434a6a4faf6b77601204fc" kindref="member">ScreenSideDetection</ref>(Screen.width)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Right&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbital_maneuver_v2_1aac10334d1ee18bcd50f2f75a8f4dfdb5" kindref="member">MoveVelVectorTowardsDesinatedPos</ref>(<ref refid="class_orbital_maneuver_v2_1a71759d6c0518d6b07a0044120bbe7d53" kindref="member">axisOfRotation</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UpdateDebugConsole();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbital_maneuver_v2_1aa6eb228c52e2557ed384586352c33ecd" kindref="member">DebugKeyboardInput</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_orbital_maneuver_v2_1a7592e7a48115f5e50ab9c50c6922341d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbital_maneuver_v2_1a7592e7a48115f5e50ab9c50c6922341d" kindref="member">SetRotationalSpeed</ref>()</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbital_maneuver_v2_1aa41c7768436538929eafa6b3a7569d94" kindref="member">rotationalSpeed</ref><sp/>=<sp/>inputDetectionUtils.MoveDirection.magnitude;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_orbital_maneuver_v2_1aac10334d1ee18bcd50f2f75a8f4dfdb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbital_maneuver_v2_1aac10334d1ee18bcd50f2f75a8f4dfdb5" kindref="member">MoveVelVectorTowardsDesinatedPos</ref>(Vector3<sp/><ref refid="class_orbital_maneuver_v2_1a71759d6c0518d6b07a0044120bbe7d53" kindref="member">axisOfRotation</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject<sp/>tempHeadingVector<sp/>=<sp/>player.transform.Find(</highlight><highlight class="stringliteral">&quot;HeadingVector&quot;</highlight><highlight class="normal">).gameObject;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tempForceStrength<sp/>=<sp/>inputDetectionUtils.ForceStrength;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbital_maneuver_v2_1a646c77cdab2e97a67315b5c47fe3ebeb" kindref="member">points</ref><sp/>=<sp/>rotationMatrixHelper.TimesXYZ(tempHeadingVector.transform.position.x,<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempHeadingVector.transform.position.y,tempHeadingVector.transform.position.z);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbital_maneuver_v2_1a264895b591ad9eb7c2aa584089f6912c" kindref="member">inputDetectionUtils</ref>.<ref refid="class_input_detection_utils_1a5c6a50f7afef0c6e87ecd5db2f5b3b53" kindref="member">TouchStopped</ref><sp/>!=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbital_maneuver_v2_1aef139c99f01c042435e2155b6f192605" kindref="member">rotatedPoint</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="class_orbital_maneuver_v2_1a646c77cdab2e97a67315b5c47fe3ebeb" kindref="member">points</ref>[0],<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)points[1],<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)points[2]);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player.transform.Find(</highlight><highlight class="stringliteral">&quot;HeadingVector&quot;</highlight><highlight class="normal">).transform.position<sp/>=<sp/><ref refid="class_orbital_maneuver_v2_1aef139c99f01c042435e2155b6f192605" kindref="member">rotatedPoint</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>=<sp/><ref refid="class_orbital_maneuver_v2_1adaa34d6b1e9110e4aee904735e8f9ce1" kindref="member">rotationMatrixHelper</ref>.<ref refid="class_rotation_matrix_helper_1a1bff7178d3bed699447d63238d5d02f8" kindref="member">TimesXYZ</ref>(<ref refid="class_orbital_maneuver_v2_1aef139c99f01c042435e2155b6f192605" kindref="member">rotatedPoint</ref>.x,<sp/><ref refid="class_orbital_maneuver_v2_1aef139c99f01c042435e2155b6f192605" kindref="member">rotatedPoint</ref>.y,<sp/><ref refid="class_orbital_maneuver_v2_1aef139c99f01c042435e2155b6f192605" kindref="member">rotatedPoint</ref>.z);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>player.transform.Find(&quot;HeadingVector&quot;).transform.position<sp/>=<sp/>rotatePointAroundAxis(player.transform.position,<sp/>360,<sp/>new<sp/>Vector3(1,0.5f,0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>Vector3<sp/>rotatePointAroundAxis(Vector3<sp/>point,<sp/>float<sp/>angle,<sp/>Vector3<sp/>axis)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>q<sp/>=<sp/>Quaternion.AngleAxis(angle,<sp/>axis);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>q<sp/>*<sp/>point;<sp/>//Note:<sp/>q<sp/>must<sp/>be<sp/>first<sp/>(point<sp/>*<sp/>q<sp/>wouldn&apos;t<sp/>compile)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_orbital_maneuver_v2_1a63fcc8d6e09ee1b5f8b1eb1e108b4e66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbital_maneuver_v2_1a63fcc8d6e09ee1b5f8b1eb1e108b4e66" kindref="member">SetRotationalMatrix</ref>()</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>tempFinalVec<sp/>=<sp/><ref refid="class_orbital_maneuver_v2_1aeb73e246d5eb0c11b9af8152a36b5fec" kindref="member">CalculateFinalRotationVector</ref>(<ref refid="class_orbital_maneuver_v2_1a264895b591ad9eb7c2aa584089f6912c" kindref="member">inputDetectionUtils</ref>.<ref refid="class_input_detection_utils_1ac6f5cc26d749dd9870da5f260d4a73e3" kindref="member">MoveDirection</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotationMatrixHelper.AcceptInput(player.transform.position.x,<sp/>player.transform.position.y,<sp/>player.transform.position.z,<sp/>tempFinalVec.x,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempFinalVec.y,<sp/>tempFinalVec.z,<sp/><ref refid="class_orbital_maneuver_v2_1aa41c7768436538929eafa6b3a7569d94" kindref="member">rotationalSpeed</ref><sp/>*<sp/><ref refid="class_orbital_maneuver_v2_1a9e6edfcd686cff27c530e967f0d03aaf" kindref="member">rotationalSpeedDampenent</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>void<sp/>SetAxisOfRotation()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//axisOfRotation<sp/>=;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>axisOfRotation<sp/>=<sp/>CalculateFinalRotationVector(inputDetectionUtils.MoveDirection.normalized);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>void<sp/>UpdateDebugConsole()<sp/>//TODO:<sp/>Remove<sp/>this<sp/>debug<sp/>function<sp/>when<sp/>no<sp/>longer<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>string<sp/>rotationalVec<sp/>=<sp/>&quot;Rotational<sp/>axis:<sp/>\n&quot;<sp/>+<sp/>axisOfRotation.ToString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>string<sp/>screen14<sp/>=<sp/>&quot;\n<sp/>Screen<sp/>14:<sp/>\n&quot;<sp/>+<sp/>screenUtils.GetScreenConstraint14(Screen.width,<sp/>Screen.height).ToString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>debuggerConsole.gameObject.GetComponent&lt;Text&gt;().text<sp/>=<sp/>axisOfRotation<sp/>+<sp/>screen14;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_orbital_maneuver_v2_1aa6eb228c52e2557ed384586352c33ecd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbital_maneuver_v2_1aa6eb228c52e2557ed384586352c33ecd" kindref="member">DebugKeyboardInput</ref>()</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Remove<sp/>this<sp/>debug<sp/>function<sp/>when<sp/>no<sp/>longer<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.GetKeyDown(KeyCode.W))</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbital_maneuver_v2_1a71759d6c0518d6b07a0044120bbe7d53" kindref="member">axisOfRotation</ref><sp/>+=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(3f,<sp/>1f,<sp/>0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_orbital_maneuver_v2_1aeb73e246d5eb0c11b9af8152a36b5fec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_orbital_maneuver_v2_1aeb73e246d5eb0c11b9af8152a36b5fec" kindref="member">CalculateFinalRotationVector</ref>(Vector3<sp/>initialVector)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Assume<sp/><sp/>θ<sp/>=<sp/>90</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newX<sp/>=<sp/></highlight><highlight class="comment">/*<sp/>initialVector.x<sp/>*<sp/>Mathf.Cos(90);*/</highlight><highlight class="normal"><sp/>0<sp/>-<sp/>initialVector.y<sp/>*<sp/>1;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newY<sp/>=<sp/>initialVector.x<sp/>+<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(newX,<sp/>newY);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="class_orbital_maneuver_v2_1a2f799e115219db02a70173b0279c31cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbital_maneuver_v2_1a2f799e115219db02a70173b0279c31cd" kindref="member">EngineBurn</ref>()<sp/></highlight><highlight class="comment">//TODO:<sp/>Retrograde<sp/>burn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;Engine<sp/>burn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>headingVector<sp/>=<sp/>player.transform.Find(</highlight><highlight class="stringliteral">&quot;HeadingVector&quot;</highlight><highlight class="normal">).transform.position;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>burnVector<sp/>=<sp/>headingVector<sp/>-<sp/><ref refid="class_orbital_maneuver_v2_1abc4e5bb7ee8eeb9c2d5ab03aca5ee3d7" kindref="member">player</ref>.transform.position;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>force<sp/>=<sp/><ref refid="class_orbital_maneuver_v2_1a264895b591ad9eb7c2aa584089f6912c" kindref="member">inputDetectionUtils</ref>.<ref refid="class_input_detection_utils_1ad370432b2d7d778ec462324347606219" kindref="member">ForceStrength</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>finalBurnVector<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(burnVector.normalized.x<sp/>*<sp/><ref refid="class_orbital_maneuver_v2_1a728eed98ac6b429526ac6e24c7d4c21b" kindref="member">forwardForceDampenent</ref><sp/>*<sp/>force,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>burnVector.normalized.y<sp/>*<sp/><ref refid="class_orbital_maneuver_v2_1a728eed98ac6b429526ac6e24c7d4c21b" kindref="member">forwardForceDampenent</ref><sp/>*<sp/>force,<sp/>burnVector.normalized.z<sp/>*<sp/><ref refid="class_orbital_maneuver_v2_1a728eed98ac6b429526ac6e24c7d4c21b" kindref="member">forwardForceDampenent</ref><sp/>*<sp/>force);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_orbital_maneuver_v2_1a264895b591ad9eb7c2aa584089f6912c" kindref="member">inputDetectionUtils</ref>.<ref refid="class_input_detection_utils_1ac6f5cc26d749dd9870da5f260d4a73e3" kindref="member">MoveDirection</ref>.y<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player.transform.Find(</highlight><highlight class="stringliteral">&quot;Player_VelocityVector&quot;</highlight><highlight class="normal">).transform.position<sp/>+=<sp/>finalBurnVector;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbital_maneuver_v2_1abc4e5bb7ee8eeb9c2d5ab03aca5ee3d7" kindref="member">player</ref>.transform.Find(</highlight><highlight class="stringliteral">&quot;Player_VelocityVector&quot;</highlight><highlight class="normal">).transform.position<sp/>-=<sp/>finalBurnVector;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Uniprj/CentauriV2/Centauri/Assets/Scripts/OrbitalFunction/OrbitalManeuverV2.cs"/>
  </compounddef>
</doxygen>
